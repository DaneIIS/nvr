ARG UBUNTU_VERSION
ARG FFMPEG_VERSION
FROM roflcoopter/amd64-ffmpeg:${FFMPEG_VERSION} as ffmpeg
FROM ubuntu:${UBUNTU_VERSION} AS build

COPY --from=ffmpeg /usr/local /usr/local/

WORKDIR /tmp/workdir

ARG OPENVINO_VERSION
ARG MAKEFLAGS="-j2"

ENV \
  DEBIAN_FRONTEND=noninteractive \
  PKG_CONFIG_PATH="/opt/opencv/share/pkgconfig:/opt/opencv/lib/pkgconfig:/opt/opencv/lib64/pkgconfig" \
  PREFIX=/opt/opencv \
  LD_LIBRARY_PATH="/opt/opencv/lib:/opt/opencv/lib64:/usr/lib64:/usr/lib:/lib64:/lib:/usr/local/lib" \
  PYTHONPATH=$PYTHONPATH:/opt/opencv/lib/python3.10/dist-packages

RUN buildDeps="autoconf \
  automake \
  ca-certificates \
  gnupg \
  cmake \
  curl \
  wget \
  libusb-1.0 \
  sudo \
  cython3 \
  intel-opencl-icd \
  clinfo \
  bzip2 \
  expat \
  libexpat1-dev \
  g++ \
  gcc \
  git \
  gperf \
  libtool \
  make \
  nasm \
  perl \
  pkg-config \
  python3 \
  python3-dev \
  python3-pip \
  python3-numpy \
  libssl-dev \
  yasm \
  libgomp1 \
  libnuma-dev \
  zlib1g-dev" && \
  apt-get -yqq update && \
  apt-get install -yq --no-install-recommends ${buildDeps}


## Install OpenVINO
ARG UBUNTU_VERSION_NUMBER
RUN \
  UBUNTU_YEAR=$(echo $UBUNTU_VERSION_NUMBER | cut -d'.' -f1) && \
  OPENVINO_YEAR=$(echo $OPENVINO_VERSION | cut -d'.' -f1) && \
  echo "deb https://apt.repos.intel.com/openvino/${OPENVINO_YEAR} ubuntu${UBUNTU_YEAR} main" | sudo tee /etc/apt/sources.list.d/intel-openvino-${OPENVINO_YEAR}.list && \
  wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \
  apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB  && \
  apt-get update && apt-get install -y --no-install-recommends openvino-${OPENVINO_VERSION}

## OpenCV
ARG OPENCV_VERSION
RUN  \
  DIR=/tmp/opencv && mkdir -p ${DIR} && cd ${DIR} && \
  curl -sL -o opencv-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \
  tar -x --strip-components=1 -f opencv-${OPENCV_VERSION}.tar.gz
RUN  \
  DIR=/tmp/opencv_contrib && mkdir -p ${DIR} && cd ${DIR} && \
  curl -sL -o opencv_contrib-${OPENCV_VERSION}.tar.gz https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.tar.gz && \
  tar -x --strip-components=1 -f opencv_contrib-${OPENCV_VERSION}.tar.gz

RUN \
  DIR=/tmp/opencv/build && mkdir -p ${DIR} && cd ${DIR} && \
  cmake -D CMAKE_BUILD_TYPE=RELEASE \
  -DBUILD_TIFF=ON \
  -DBUILD_opencv_java=OFF \
  -D BUILD_SHARED_LIBS=ON \
  -D OPENCV_GENERATE_PKGCONFIG=YES \
  -D WITH_OPENGL=ON \
  -D WITH_OPENCL=ON \
  -D WITH_OPENVINO=ON \
  -D WITH_INF_ENGINE=ON \
  -D WITH_NGRAPH=ON \
  -D ENABLE_CXX11=ON \
  -D WITH_OPENMP=ON \
  -D WITH_IPP=ON \
  -D WITH_TBB=ON \
  -D WITH_EIGEN=ON \
  -D WITH_V4L=ON \
  -D WITH_GTK=OFF \
  -D WITH_GTK_2_X=OFF \
  -D WITH_FFMPEG=ON \
  -D WITH_GSTREAMER=ON \
  -D WITH_GSTREAMER_0_10=OFF \
  -D WITH_LIBV4L=ON \
  -D WITH_CSTRIPES=ON \
  -D BUILD_TESTS=OFF \
  -D BUILD_PERF_TESTS=OFF \
  -D BUILD_opencv_python2=OFF \
  -D BUILD_opencv_python3=ON \
  -D CMAKE_INSTALL_PREFIX=${PREFIX} \
  -D INSTALL_PYTHON_EXAMPLES=OFF \
  -D INSTALL_C_EXAMPLES=OFF \
  -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules \
  -D BUILD_DOCS=OFF \
  -D BUILD_EXAMPLES=OFF \
  -D BUILD_opencv_face=OFF \
  -D HIGHGUI_ENABLE_PLUGINS=OFF \
  -D WITH_WIN32UI=OFF \
  -D WITH_GTK=OFF \
  -D WITH_QT=OFF \
  /tmp/opencv && \
  make && \
  make install

RUN python3 -c 'import cv2; print(cv2.getBuildInformation())'

FROM scratch

COPY --from=build /opt/opencv /opt/opencv/
